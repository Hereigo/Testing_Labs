@model ZdAdoConnectorMvc.Models.AdoWorkItem

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>AdoWorkItemModel</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rev)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rev)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CommentVersionRef.Text)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CommentVersionRef.Text)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Url)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Url)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Links)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Links)
        </dd>

        @foreach (var item in Model.Fields)
        {
            <dt class="col-sm-2">
                [@Html.DisplayNameFor(model => model.Fields[item.Key])
            </dt>
            <dd class="col-sm-10">
                @item.Value
            </dd>
        }

    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
